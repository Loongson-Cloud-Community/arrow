name: Build and Push vcpkg with flight image

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
      push:
        required: false
        default: 'true'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform_tag: ["manylinux_2_38", "musllinux_1_2"]

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tag
        run: |
          branch=${{ github.event.inputs.branch }}
          tag=${branch#arrow_}

          manylinux=${{ matrix.platform_tag }}
          platform=$(echo $manylinux | cut -d '_' -f1)
          manylinux=${manylinux#*_}

          vcpkg=$(grep '^VCPKG=' .env | sed -E 's/^VCPKG="([^"]+)".*/\1/')

          echo "tag=${tag}" >> $GITHUB_ENV
          echo "manylinux=${manylinux}" >> $GITHUB_ENV
          echo "platform=${platform}" >> $GITHUB_ENV
          echo "vcpkg=${vcpkg}" >> $GITHUB_ENV


      - name: Build and Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ci/docker/python-wheel-${{ env.platform }}-vcpkg-flight.dockerfile
          platforms: linux/loong64
          push: ${{ github.event.inputs.push }}
          build-args: |
            base=ghcr.io/loongson-cloud-community/arrow-wheel-${{ env.platform }}-vcpkg-azure:${{ env.tag }}
          tags: |
            ghcr.io/loongson-cloud-community/arrow-wheel-${{ env.platform }}-vcpkg-flight:latest
            ghcr.io/loongson-cloud-community/arrow-wheel-${{ env.platform }}-vcpkg-flight:${{ env.tag }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max
